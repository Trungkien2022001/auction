version: '3'
services:

  mysql:
    image: mysql:latest
    ports:
      - 3306:3306
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_DATABASE: "auction"
    # volumes:
    #   - mysql_data:/var/lib/mysql
  redis:
    image: redis:latest
    ports:
      - 6379:6379

  nodejs:
    build:
      context: ./api
      dockerfile: Dockerfile
    volumes:
      - ./api:/app
    ports:
      - 3030:3030
    depends_on:
      - redis
      - mysql
      # - elasticsearch
      # - kafka
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_DATABASE: auction
      MYSQL_USER: root
      MYSQL_ALLOW_EMPTY_PASSWORD: oke
      MYSQL_CONNECTION_URL: mysql://root@host.docker.internal/auction

  socketjs:
    build:
      context: ./api
      dockerfile: Dockerfile-socket
    volumes:
      - ./api:/app
    ports:
      - 3031:3031
    depends_on:
      - redis
      - mysql
      # - elasticsearch
      # - kafka
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_DATABASE: auction
      MYSQL_USER: root
      MYSQL_ALLOW_EMPTY_PASSWORD: oke

  reactjs:
    build:
      context: ./client
      dockerfile: Dockerfile
    volumes:
      - ./client:/app
    ports:
      - 3000:3000

  # elasticsearch:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:8.7.1
  #   ports:
  #     - 9200:9200
  #   environment:
  #     discovery.type: single-node

  # kafka:
  #   image: wurstmeister/kafka:latest
  #   ports:
  #     - 9092:9092
  #   expose:
  #     - "9093"
  #   environment:
  #     KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
  #     KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
  #     KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

  # zookeeper:
  #   image: wurstmeister/zookeeper:latest
  #   ports:
  #     - 2181:2181
  
  # nestjs:
  #   build:
  #     context: ./api-nest
  #     dockerfile: Dockerfile
  #   volumes:
  #     - ./api-nest:/app
  #   ports:
  #     - 3131:3131
  #   depends_on:
  #     - mysql

  # springboot:
  #   build:
  #     context: ./api-springboot
  #     dockerfile: Dockerfile
  #   volumes:
  #     - ./api-springboot:/app
  #   ports:
  #     - 8080:8080
  #   depends_on:
  #     - mysql
